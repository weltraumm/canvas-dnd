{"version":3,"sources":["components/Workspace.js","App.js","index.js"],"names":["SQUARE_TYPE","CIRCLE_TYPE","drawBorder","ctx","beginPath","strokeStyle","moveTo","lineTo","stroke","closePath","getSquare","x","y","initial","choosen","side","type","color","getCircle","radius","draw","figure","fillStyle","fillRect","arc","Math","PI","fill","drawStroke","lineWidth","strokeRect","Workspace","useState","figureCollection","setFigureCollection","choosenFigure","setChoosenFigure","canvas","useRef","previousFigureCollection","usePrevious","previousChoosenFigure","value","ref","useEffect","current","getContext","clearRect","map","d","initialSquare","initialCircle","length","diff","filter","i","indexOf","isDown","dragTarget","startX","startY","onCanvas","handleMouseUp","e","onMouseDown","parseInt","nativeEvent","offsetX","clientLeft","offsetY","clientTop","isTarget","box","hitBox","initialWasFound","somethingIsUpperInitial","isInitial","oneMoreFigure","initialType","onMouseMove","mouseX","mouseY","dx","dy","onMouseUp","onMouseOut","width","height","App","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c8c52e18.chunk.js","sourcesContent":["/* eslint-disable */\nimport React, { useEffect, useRef, useState } from \"react\";\n\nconst PINK = \"#fb3291\";\nconst YELLOW = \"#ffe533\";\nconst SQUARE_TYPE = \"square\";\nconst CIRCLE_TYPE = \"circle\";\nconst SQUARE_SIDE = 130;\nconst CIRCLE_RADIUS = 65;\nconst IS_INITIAL = true;\nconst NOT_INITIAL = false;\n\nconst drawBorder = (ctx) => {\n  ctx.beginPath();\n  ctx.strokeStyle = \"black\";\n  ctx.moveTo(251, 0);\n  ctx.lineTo(251, 700);\n  ctx.stroke();\n  ctx.closePath();\n};\n\nconst getSquare = (x, y, initial) => {\n  return {\n    x,\n    y,\n    initial,\n    choosen: false,\n    side: SQUARE_SIDE,\n    type: SQUARE_TYPE,\n    color: YELLOW,\n  };\n};\n\nconst getCircle = (x, y, initial) => {\n  return {\n    x,\n    y,\n    initial,\n    choosen: false,\n    radius: CIRCLE_RADIUS,\n    type: CIRCLE_TYPE,\n    color: PINK,\n  };\n};\n\nconst draw = (figure, ctx) => {\n  ctx.beginPath();\n  ctx.fillStyle = figure.color;\n  switch (figure.type) {\n    case SQUARE_TYPE:\n      ctx.fillRect(figure.x, figure.y, figure.side, figure.side);\n      break;\n    case CIRCLE_TYPE:\n      ctx.arc(figure.x, figure.y, figure.radius, 0, 2 * Math.PI);\n      ctx.fill();\n      break;\n    default:\n  }\n  ctx.closePath();\n};\n\nconst drawStroke = (figure, ctx) => {\n  ctx.beginPath();\n  ctx.strokeStyle = \"#272727\";\n  ctx.lineWidth = 3;\n  if (figure === null) return;\n  switch (figure.type) {\n    case SQUARE_TYPE:\n      ctx.strokeRect(figure.x, figure.y, figure.side, figure.side);\n      break;\n    case CIRCLE_TYPE:\n      ctx.arc(figure.x, figure.y, figure.radius, 0, 2 * Math.PI);\n      ctx.stroke();\n      break;\n    default:\n      break;\n  }\n  ctx.closePath();\n};\n\nconst Workspace = () => {\n  const [figureCollection, setFigureCollection] = useState([]);\n  const [choosenFigure, setChoosenFigure] = useState(null);\n\n  const canvas = useRef();\n  let ctx = null;\n\n  const previousFigureCollection = usePrevious(figureCollection);\n  const previousChoosenFigure = usePrevious(choosenFigure);\n\n  function usePrevious(value) {\n    const ref = useRef();\n    useEffect(() => {\n      ref.current = value;\n    });\n    return ref.current;\n  }\n\n  useEffect(() => {\n    ctx = canvas.current.getContext(\"2d\");\n    if (previousChoosenFigure !== choosenFigure) {\n      ctx.beginPath();\n      ctx.clearRect(0, 0, 900, 700);\n      drawBorder(ctx);\n      figureCollection.map((d) => {\n        draw(d, ctx);\n      });\n      drawStroke(choosenFigure, ctx);\n      ctx.closePath();\n    }\n  }, [choosenFigure]);\n\n  useEffect(() => {\n    ctx = canvas.current.getContext(\"2d\");\n    drawBorder(ctx);\n    const initialSquare = getSquare(60, 60, IS_INITIAL);\n    const initialCircle = getCircle(125, 315, IS_INITIAL);\n    setFigureCollection([...figureCollection, initialSquare, initialCircle]);\n  }, []);\n\n  useEffect(() => {\n    ctx = canvas.current.getContext(\"2d\");\n    if (previousFigureCollection) {\n      if (previousFigureCollection.length < figureCollection.length) {\n        const diff = figureCollection.filter(\n          (i) => previousFigureCollection.indexOf(i) < 0\n        );\n        ctx.beginPath();\n        diff.map((d) => {\n          draw(d, ctx);\n        });\n        ctx.closePath();\n      } else if (previousFigureCollection.length > figureCollection.length) {\n        ctx.beginPath();\n        ctx.clearRect(0, 0, 900, 700);\n        figureCollection.map((d) => {\n          draw(d, ctx);\n        });\n        ctx.closePath();\n      }\n    }\n  }, [figureCollection]);\n\n  let isDown = false;\n  let dragTarget = null;\n  let startX = null;\n  let startY = null;\n  let onCanvas = false;\n\n  const hitBox = (x, y) => {\n    let isTarget = null;\n    for (let i = 0; i < figureCollection.length; i++) {\n      const box = figureCollection[i];\n      if (box.type === SQUARE_TYPE) {\n        if (\n          x >= box.x &&\n          x <= box.x + box.side &&\n          y >= box.y &&\n          y <= box.y + box.side\n        ) {\n          if (!box.initial) {\n            dragTarget = box;\n            isTarget = true;\n            break;\n          }\n        }\n      }\n      if (box.type === CIRCLE_TYPE) {\n        if (\n          (x - box.x) * (x - box.x) + (y - box.y) * (y - box.y) <=\n          box.radius * box.radius\n        ) {\n          if (!box.initial) {\n            dragTarget = box;\n            isTarget = true;\n            break;\n          }\n        }\n      }\n    }\n\n    return isTarget;\n  };\n\n  const isInitial = (x, y) => {\n    let initialWasFound = false;\n    let somethingIsUpperInitial = false;\n    for (let i = 0; i < figureCollection.length; i++) {\n      const box = figureCollection[i];\n      if (box.type === SQUARE_TYPE) {\n        if (\n          x >= box.x &&\n          x <= box.x + box.side &&\n          y >= box.y &&\n          y <= box.y + box.side\n        ) {\n          if (box.initial) {\n            initialWasFound = true;\n          } else {\n            somethingIsUpperInitial = true;\n            break;\n          }\n        }\n      }\n      if (box.type === CIRCLE_TYPE) {\n        if (\n          (x - box.x) * (x - box.x) + (y - box.y) * (y - box.y) <=\n          box.radius * box.radius\n        ) {\n          if (box.initial) {\n            initialWasFound = true;\n          } else {\n            somethingIsUpperInitial = true;\n            break;\n          }\n        }\n      }\n    }\n    if (somethingIsUpperInitial) {\n      return false;\n    } else {\n      return initialWasFound;\n    }\n  };\n\n  const initialType = (x, y) => {\n    let initialType = null;\n    for (let i = 0; i < figureCollection.length; i++) {\n      const box = figureCollection[i];\n      if (box.type === SQUARE_TYPE) {\n        if (\n          x >= box.x &&\n          x <= box.x + box.side &&\n          y >= box.y &&\n          y <= box.y + box.side\n        ) {\n          initialType = SQUARE_TYPE;\n          break;\n        }\n      }\n      if (box.type === CIRCLE_TYPE) {\n        if (\n          (x - box.x) * (x - box.x) + (y - box.y) * (y - box.y) <=\n          box.radius * box.radius\n        ) {\n          initialType = CIRCLE_TYPE;\n          break;\n        }\n      }\n    }\n    return initialType;\n  };\n\n\tconst handleMouseDown = (e) => {\n    startX = parseInt(e.nativeEvent.offsetX - canvas.current.clientLeft);\n    startY = parseInt(e.nativeEvent.offsetY - canvas.current.clientTop);\n    if (startX > 251) {\n      onCanvas = true;\n    }\n    isDown = hitBox(startX, startY);\n\n    if (isInitial(startX, startY)) {\n      let oneMoreFigure = null;\n      switch (initialType(startX, startY)) {\n        case SQUARE_TYPE:\n          oneMoreFigure = getSquare(60, 60, NOT_INITIAL);\n          break;\n        case CIRCLE_TYPE:\n          oneMoreFigure = getCircle(125, 315, NOT_INITIAL);\n          break;\n        default:\n          break;\n      }\n      setFigureCollection([...figureCollection, oneMoreFigure]);\n      dragTarget = oneMoreFigure;\n    }\n    setChoosenFigure(dragTarget);\n  };\n\n  const handleMouseMove = (e) => {\n    if (!isDown) return;\n    const mouseX = parseInt(e.nativeEvent.offsetX - canvas.current.clientLeft);\n    const mouseY = parseInt(e.nativeEvent.offsetY - canvas.current.clientTop);\n    const dx = mouseX - startX;\n    const dy = mouseY - startY;\n    startX = mouseX;\n\t\tstartY = mouseY;\n\t\t\tdragTarget.x += dx;\n      dragTarget.y += dy;\t\t\n    ctx.beginPath();\n    ctx.clearRect(0, 0, 900, 700);\n    figureCollection.map((d) => {\n      draw(d, ctx);\n    });\n\t\tdrawBorder(ctx);\n\t\tdrawStroke(dragTarget, ctx);\n    ctx.closePath();\n\n    if (onCanvas && mouseX < 251) {\n      handleMouseUp(e);\n    }\n  };\n\n  const handleMouseUp = (e) => {\n    dragTarget = null;\n    isDown = false;\n  };\n\n  const handleMouseOut = (e) => {\n    handleMouseUp(e);\n  };\n\n  return (\n    <canvas\n      onMouseDown={handleMouseDown}\n      onMouseMove={handleMouseMove}\n      onMouseUp={handleMouseUp}\n      onMouseOut={handleMouseOut}\n      ref={canvas}\n      width={900}\n      height={700}\n    />\n  );\n};\n\nexport default Workspace;\n","import React from \"react\";\nimport \"./App.css\";\nimport Workspace from \"./components/Workspace\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h2>Canvas Drag'n'Drop</h2>\n      <p className=\"titleSection figureTitle\"><b>Figures</b></p>\n      <p className=\"titleSection canvasTitle\"><b>Canvas</b></p>\n      <br />\n      <div className=\"wrapper\">\n        <Workspace />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}